

PAGE	55,132							;AN000;
NAME	SELECT							;AN000;
TITLE	SELECT - DOS - SELECT.EXE				;AN000;
SUBTTL	SELECT4.asm						;AN000;
;RLC .ALPHA								;AN000;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
;	SELECT4.ASM : Copyright 1988 Microsoft
;
;	DATE:	 August 8/87
;
;	COMMENTS: Assemble with MASM 3.0 (using the /A option)
;
;		  Panel flow is defined in the following files:
;
;		      ş SELECT1.ASM
;		      ş SELECT2.ASM
;		      ş SELECT3.ASM
;		      ş SELECT4.ASM
;		      ş SELECT5.ASM
;		      ş SELECT6.ASM
;
;
;
;  Module contains code for :
;	- DOS parameters screen
;	- SHELL parameters screen
;	- FASTOPEN parameters screen
;	- SHARE screen
;	- GRAPHICS parameter screen
;	- EXPANDED MEMORY parameters screen
;
;
;	CHANGE HISTORY:
;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
DATA	SEGMENT BYTE PUBLIC 'DATA'                              ;AN000;
DATA	       ENDS						;AN000;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
.XLIST								;AN000;
	INCLUDE    panel.mac					;AN000;
	INCLUDE    select.inc					;AN000;
	INCLUDE    pan-list.inc 				;AN000;
	INCLUDE    castruc.inc					;AN000;
	INCLUDE    macros.inc					;AN000;
	INCLUDE    ext.inc					;AN000;
	INCLUDE    varstruc.inc 				;AN000;
	INCLUDE    rout_ext.inc 				;AN000;
.LIST								;AN000;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
								;
SELECT	SEGMENT PARA PUBLIC 'SELECT'                            ;AN000;segment for far routine
	ASSUME	CS:SELECT,DS:DATA				;AN000;
								;
	INCLUDE casextrn.inc					;AN000;
								;
HLP_OVER	EQU	00010000B				;AN000;
ICB_OUT 	EQU  0000000100000000B				;AN000;display default and accept input
								;
	PUBLIC	DOS_PARAMETERS_SCREEN				;AN000;
	EXTRN	EXIT_SELECT:NEAR				;AN000;
	EXTRN	PROCESS_ESC_F3:NEAR				;AN000;
	EXTRN	FIRST_DISK_SCREEN:NEAR				;AN000;
	EXTRN	VDISK_SCREEN:NEAR				;AN000;
	EXTRN	EXIT_DOS:NEAR					;AN000;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
;  ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
;  ³DOS_PARAMETERS_SCREENS		³
;  ³					³
;  ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
;
;  The DOS PARAMETERS SCREEN is presented if the user selected to
;  view/change the selections generated by SELECT ( F_REVIEW = 2 ).
;  The screen gets various DOS parameters (PATH, APPEND, PROMPT).
;  The TAB key is used to move to the next item on the parameter list.
;  If the cursor is on the last item in the parameter list, TAB key
;  will cause the cursor to wrap around to the first item of the parameter list.
;  When the TAB key is depressed, the current parameter value is saved in
;  a temporary location.  The temporary parameter values are copied to actual
;  values only when the ENTER key is depressed.
;  Valid keys are ENTER, ESC, F1, F3, TAB and ASCII characters.
;  Since the DOS parameters APPEND and PATH are only useful for hard
;  disk based systems, an additional check of install to drive C: has been
;  included.  This check is not specified in the Functional Specification.
;  PROMPT parameter values are not checked for validity.
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
DOS_PARAMETERS_SCREEN:						;AN000; if user accepts choices
	cmp F_REVIEW,E_REVIEW_ACCEPT				;AN000;
	jne @F							;AN000;
	   GOTO_ 		FIRST_DISK_SCREEN		;AN000;    goto FIRST_DISK_SCREEN
	@@:							;AN000;
								;
	cmp I_DEST_DRIVE,E_DEST_DRIVE_C				;AC000; if install to drive B: or A: JW
	je @F							;AN000;
	   GOTO_ 		SHELL_SCREEN			;AN000;    goto next screen
	@@:							;AN000;
								;
	COPY_STRING		S_STR120_1, M_STR120_1, S_PATH	;AN000; copy PATH to temp location
	COPY_STRING		S_STR40, M_STR40, S_APPEND_P	;AN000; copy APPEND parameters to temp location JW
	COPY_STRING		S_STR120_2, M_STR120_2,S_APPEND ;AN000; copy APPEND to temp location
	COPY_STRING		S_STR120_3, M_STR120_3,S_PROMPT ;AN000; copy PROMPT to temp location
								;
	INIT_PQUEUE		PAN_DOS_PARAM			;AN000; initialize queue
	PREPARE_PANEL		PAN_HBAR			;AN000; prepare horizontal bar
	PREPARE_CHILDREN					;AN000; prepare child panels
	INIT_STRING		STR_DOS_PATH,S_STR120_1, M_PATH ;AN000; display current PATH value
	INIT_STRING		STR_DOS_APPEND_P,S_STR40,M_APPEND_P   ;AN000; display current APPEND parameters value  JW
	INIT_STRING		STR_DOS_APPEND,S_STR120_2,M_APPEND    ;AN000; display current APPEND value
	INIT_STRING		STR_DOS_PROMPT,S_STR120_3,M_PROMPT    ;AN000; display current PROMPT value
	DISPLAY_PANEL						;AN000; display PC/DOS parameters panel
								;
	INIT_VAR		N_COUNTER, 1			;AN000; set counter = 1
								;
GET_PARAMETERS: 						;AN000;
								;
	repeat_l_1: 						;AN000; repeat code block
								;
	   cmp N_COUNTER,1					;AN000;
	   jne select_l_1_1
	      GET_STRING	STR_DOS_PATH,S_STR120_1,M_PATH,FK_TAB ;AN000; get user parameters for PATH
	      COPY_STRING	S_STR120_1,M_STR120_1,S_USER_STRING   ;AN000; save parameter in temp location
								;
	   jmp endselect_l_1
	   select_l_1_1:
	   cmp N_COUNTER,2					;AN000; 					    JW
	   jne select_l_1_2
	      GET_STRING	STR_DOS_APPEND_P,S_STR40,M_APPEND_P,FK_TAB  ;AN000; get user parameters for APPEND  JW
	      COPY_STRING	S_STR40,M_STR40,S_USER_STRING	;AN000; save parameter in temp location 	    JW
								;
	   jmp short endselect_l_1
	   select_l_1_2:
	   cmp N_COUNTER,3					;AN000;
	   jne otherwise_l_1
	      GET_STRING	STR_DOS_APPEND,S_STR120_2,M_APPEND,FK_TAB   ;AN000; get user path for APPEND
	      COPY_STRING	S_STR120_2,M_STR120_2,S_USER_STRING	    ;AN000; save parameter in temp location
								;
	   jmp short endselect_l_1
	   otherwise_l_1:					;AN000;
	      GET_STRING	STR_DOS_PROMPT,S_STR120_3,M_PROMPT,FK_TAB   ;AN000; get user parameters for PROMPT
	      COPY_STRING	S_STR120_3,M_STR120_3,S_USER_STRING	    ;AN000; save parameter in temp location
								;
	   endselect_l_1:					;AN000;
								;
	   INC_VAR		N_COUNTER			;AN000;   inc counter
								;
	   cmp N_COUNTER,4					;AN000;   if counter > 3
	   jbe @F						;AN000;
	      INIT_VAR		N_COUNTER, 1			;AN000;      set counter = 1
	   @@:							;AN000;
								;
	cmp N_USER_FUNC,E_ENTER					;AN000; break loop if ENTER entered
	je endrepeat_l_1
	cmp N_USER_FUNC,E_ESCAPE				;AN000; or ESCAPE entered
	je endrepeat_l_1
	cmp N_USER_FUNC,E_F3					;AN000; or F3 entered
	je endrepeat_l_1
	jmp repeat_l_1
	endrepeat_l_1:
								;
	PROCESS_ESC						;AN000;
	PROCESS_F3						;AN000;
								;
	CHECK_DOS_PATH		S_STR120_1			;AN000; check PATH path
	jnc @F							;AN000;
	   HANDLE_ERROR 	ERR_BAD_PATH, E_RETURN		;AN000;
	   INIT_VAR		N_COUNTER, 1			;AN000;
	   GOTO_ 		GET_PARAMETERS			;AN000;
	@@:							;AN000;
								;
	CHECK_DOS_PATH		S_STR120_2			;AN000; check APPEND path
	jnc @F							;AN000;
	   HANDLE_ERROR 	ERR_BAD_PATH, E_RETURN		;AN000;
	   INIT_VAR		N_COUNTER,2			;AN000;
	   GOTO_ 		GET_PARAMETERS			;AN000;
	@@:							;AN000;
								;
	COPY_STRING		S_PATH, M_PATH, S_STR120_1	;AN000;    save PATH parameter
	COPY_STRING		S_APPEND_P, M_APPEND_P, S_STR40 ;AN000;    save APPEND parameter JW
	COPY_STRING		S_APPEND, M_APPEND, S_STR120_2	;AN000;    save APPEND path
	COPY_STRING		S_PROMPT, M_PROMPT, S_STR120_3	;AN000;    save PROMPT parameter
	PUSH_HEADING		DOS_PARAMETERS_SCREEN		;AN000;    save screen address on SELECT STACK
	GOTO_			SHELL_SCREEN			;AN000;    goto the next screen (SHELL)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
;  ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
;  ³SHELL_SCREEN			³
;  ³					³
;  ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
;
;  The SHELL PARAMETERS SCREEN is presented if the user selected to
;  install SHELL support and the user wants to view/change parameters.
;  Note.The view/change parameters condition is not specified in the May 5, 1987
;  Functional Specification.
;  The screen gets the parameters for SHELL.
;  Valid keys are ENTER, ESC, F1, F3 and ASCII characters.
;  Note.User entered parameter values are not checked for validity.
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
SHELL_SCREEN:							;AN000;
	cmp F_SHELL,E_SHELL_NO					;AN000; if SHELL support is not required
	jne @F							;AN000;
	   GOTO_ 		FASTOPEN_SCREEN 		;AN000;    goto the next screen (KSAM)
	@@:							;AN000;
								;
	INIT_PQUEUE		PAN_SHELL			;AN000; initialize queue
	PREPARE_PANEL		PAN_HBAR			;AN000; prepare horizontal bar
	PREPARE_CHILDREN					;AN000; prepare child panels
	INIT_STRING		STR_SHELL,S_SHELL,M_SHELL	;AN000; get SHELL parameters
	DISPLAY_PANEL						;AN000; display SHELL panel
								;
	GET_STRING		STR_SHELL,S_SHELL,M_SHELL,FK_TEXT     ;AN000; get SHELL parameters
								;
	cmp N_USER_FUNC,E_ENTER					;AN000; if user entered ENTER key
	jne else_l_1						;AN000;
	   COPY_STRING		S_SHELL, M_SHELL, S_USER_STRING ;AN000;    save new SHELL parameters
	   PUSH_HEADING 	SHELL_SCREEN			;AN000;    save screen address on SELECT STACK
	   GOTO_ 		FASTOPEN_SCREEN 		;AN000;    goto the next screen (KSAM)
	jmp short endif_l_1
	else_l_1:						;AN000;
	   GOTO_ 		PROCESS_ESC_F3			;AN000; user entered ESC or F3, take action
	endif_l_1:						;AN000;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
;  ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
;  ³FASTOPEN_SCREEN			³
;  ³					³
;  ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
;
;  The FASTOPEN PARAMETERS SCREEN is presented if the user selected to
;  install FASTOPEN support and the user wants to view/change the parameters.
;  Note.The view/change parameters condition is not specified in the May 5, 1987
;  Functional Specification.
;  The screen gets parameters for the FASTOPEN command.
;  Valid keys are ENTER, ESC, F1, F3 and ASCII characters.
;  Note.User entered parameter values are not checked for validity.
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FASTOPEN_SCREEN:						;AN000;
	cmp F_FASTOPEN,E_FASTOPEN_NO				;AN000; if FASTOPEN support not required
	je @F
	cmp I_DEST_DRIVE,E_DEST_DRIVE_C				;AC000;JW
	je endif_l_2						;AN000;
	@@:
	   GOTO_ 		SHARE_SCREEN			;AN000;    goto next screen (SHARE)
	endif_l_2:						;AN000;
								;
	INIT_PQUEUE		PAN_FASTOPEN			;AN000; initialize queue
	PREPARE_PANEL		PAN_HBAR			;AN000; prepare horizontal bar
	PREPARE_CHILDREN					;AN000; prepare child panels
	INIT_STRING		STR_FASTOPEN,S_FASTOPEN,M_FASTOPEN    ;AN000; get new parameters for FASTOPEN
	DISPLAY_PANEL						;AN000; display FASTOPEN panel
								;
	GET_STRING		STR_FASTOPEN,S_FASTOPEN,M_FASTOPEN,FK_TEXT ;AN000; get new parameters for FASTOPEN
								;
	cmp N_USER_FUNC,E_ENTER					;AN000; if user entered ENTER key
	jne else_l_3						;AN000;
	   COPY_STRING		S_FASTOPEN,M_FASTOPEN,S_USER_STRING   ;AN000;save new parameters for FASTOPEN
	   PUSH_HEADING 	FASTOPEN_SCREEN 		;AN000;    save screen address on SELECT STACK
	   GOTO_ 		SHARE_SCREEN			;AN000;    goto the next screen (SHARE)
	jmp short endif_l_3
	else_l_3:						;AN000;
	   GOTO_ 		PROCESS_ESC_F3			;AN000; user entered ESC or F3, take action
	endif_l_3:						;AN000;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
;  ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
;  ³SHARE_SCREEN			³
;  ³					³
;  ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
;
;  The SHARE PARAMETERS SCREEN is presented if the user selected to
;  install SHARE support and the user wants to view/change parameters.
;  Note.The view/change parameters condition is not specified in the May 5, 1987
;  Functional Specification.
;  The screen gets parameters for the SHARE command.
;  Valid keys are ENTER, ESC, F1, F3 and ASCII characters.
;  Note.User entered parameter values are not checked for validity.
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
SHARE_SCREEN:							;AN000;
	cmp F_SHARE,E_SHARE_NO					;AN000; if SHARE support not required
	je @F
	cmp I_DEST_DRIVE,E_DEST_DRIVE_C				;AC000;JW
	je endif_l_4						;AN000;
	@@:
;;	   INIT_VAR		F_SHARE, E_SHARE_NO		;AN021;
	   GOTO_ 		GRAPHICS_SCREEN 		;AN000;    goto the next screen (GRAPHICS)
	endif_l_4:						;AN000;
								;
	INIT_PQUEUE		PAN_SHARE			;AN000; initialize queue
	PREPARE_PANEL		PAN_HBAR			;AN000; prepare horizontal bar
	PREPARE_CHILDREN					;AN000; prepare child panels
	INIT_STRING		STR_SHARE,S_SHARE,M_SHARE	;AN000; get new parameters for SHARE
	DISPLAY_PANEL						;AN000; display SHARE panel
								;
	GET_STRING		STR_SHARE,S_SHARE,M_SHARE,FK_TEXT     ;AN000; get new parameters for SHARE
								;
	cmp N_USER_FUNC,E_ENTER					;AN000; if user entered ENTER key
	jne else_l_5						;AN000;
	   COPY_STRING		S_SHARE, M_SHARE, S_USER_STRING ;AN000;    save new parameters for SHARE
	   PUSH_HEADING 	SHARE_SCREEN			;AN000;    save screen address on SELECT STACK
	   GOTO_ 		GRAPHICS_SCREEN 		;AN000;    goto the next screen (GRAPHICS)
	jmp short endif_l_5
	else_l_5:						;AN000;
	   GOTO_ 		PROCESS_ESC_F3			;AN000; user entered ESC or F3, take action
	endif_l_5:						;AN000;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
;  ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
;  ³GRAPHICS_SCREEN			³
;  ³					³
;  ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
;
;  The GRAPHICS PARAMETERS SCREEN is presented if the user selected to
;  install GRAPHICS support and the user wants to view/change parameters.
;  Note.The view/change parameters condition is not specified in the May 5, 1987
;  Functional Specification.
;  The screen gets parameters for the GRAPHICS command.
;  Valid keys are ENTER, ESC, F1, F3 and ASCII characters.
;  Note.User entered parameter values are not checked for validity.
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
GRAPHICS_SCREEN:						;AN000;
	cmp F_GRAPHICS,E_GRAPHICS_NO				;AN000; if GRAPHICS support not required
	jne @F							;AN000;
	   GOTO_ 		EXP_MEMORY_SCREEN		;AN000;    goto the next screen (EXPANDED_MEM)
	@@:							;AN000;
								;
	GET_PRINTER_PARAMS	0, 1, N_RETCODE 		;AN000;
	cmp N_RETCODE,1						;AN000;
	jne @F							;AN000;
	   COPY_STRING		S_GRAPHICS,M_GRAPHICS,S_GRAPH_PARM    ;AN000;
	@@:							;AN000;
								;
	INIT_PQUEUE		PAN_GRAPHICS			;AN000; initialize queue
	PREPARE_PANEL		PAN_HBAR			;AN000; prepare horizontal bar
	PREPARE_CHILDREN					;AN000; prepare child panels
	INIT_STRING		STR_GRAPHICS,S_GRAPHICS,M_GRAPHICS    ;AN000; get new parameters for GRAPHICS
	DISPLAY_PANEL						;AN000; display GRAPHICS panel
								;
	GET_STRING		STR_GRAPHICS,S_GRAPHICS,M_GRAPHICS,FK_TEXT ;AN000; get new parameters for GRAPHICS
								;
	cmp N_USER_FUNC,E_ENTER					;AN000; if user entered ENTER key
	jne else_l_6						;AN000;
	   COPY_STRING		S_GRAPHICS, M_GRAPHICS, S_USER_STRING ;AN000;save new parameters for GRAPHICS
	   PUSH_HEADING 	GRAPHICS_SCREEN 		;AN000;    save screen address on SELECT STACK
	   GOTO_ 		EXP_MEMORY_SCREEN		;AN000;    goto next screen (EXPANDED_MEMORY)
	jmp short endif_l_6
	else_l_6:						;AN000;
	   GOTO_ 		PROCESS_ESC_F3			;AN000; user entered ESC or F3, take action
	endif_l_6:						;AN000;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
;  ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
;  ³EXP_MEMORY_SCREEN			³
;  ³					³
;  ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
;
;  The EXPANDED MEMORY PARAMETERS SCREEN is presented if the user selected to
;  install expanded memory support and the user wants to view/change parameters.
;  Note.The view/change parameters condition is not specified in the May 5, 1987
;  Functional Specification.
;  The screen gets parameters for the XMAEM and XMA2EMS commands.
;  The expanded memory commands are only supported if memory above 1000000H
;  is available.
;  The TAB key is used to move to the next item on the parameter list.
;  If the cursor is on the last item in the parameter list, TAB key
;  will cause the cursor to wrap around to the first item of the parameter list.
;  When the TAB key is depressed, the current parameter value is saved in
;  a temporary location.  The temporary parameter values are copied to actual
;  values only when the ENTER key is depressed.
;  Valid keys are ENTER, ESC, F1, F3 and ASCII characters.
;  Note.User entered parameter values are not checked for validity.
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
EXP_MEMORY_SCREEN:						;AN000;
	cmp F_XMA,E_XMA_NO					;AN000; if XMA support not required
	je @F
	cmp F_XMA,E_XMA_NA					;AN000; or if XMA not available
	je @F
	cmp I_DEST_DRIVE,E_DEST_DRIVE_C				;AC000; or if install to drive B: or A:       JW
	je endif_l_7						;AN000;
	@@:
	   GOTO_ 		VDISK_SCREEN			;AN000;    goto the next screen (VDISK)
	endif_l_7:						;AN000;
								;
	COPY_STRING		S_STR120_1, M_STR120_1, S_XMAEM ;AN000; copy XMAEM to temp location
	COPY_STRING		S_STR120_2,M_STR120_2,S_XMA2EMS ;AN000; copy XMA2EMS to temp location
								;
	cmp N_MOD80,E_IS_MOD80					;AN000; 				      JW
	jne else_l_8						;AN000; 				      JW
	   INIT_PQUEUE		PAN_EXP_MEMORY			;AN000; initialize queue
	jmp short endif_l_8
	else_l_8:							;AN000; 				      JW
	   INIT_PQUEUE		PAN_EXP_MEMORY2 		;AN000; initialize queue		      JW
	endif_l_8:						;AN000; 				      JW
								;
	PREPARE_PANEL		PAN_HBAR			;AN000; prepare horizontal bar
	PREPARE_CHILDREN					;AN000; prepare child panels
								;
	cmp N_MOD80,E_IS_MOD80					;AN000; 				      JW
	jne @F							;AN000; 				      JW
	   INIT_STRING		STR_XMAEM,S_STR120_1,M_XMAEM	;AN000; display parameter for XMAEM
	@@:							;AN000; 				      JW
								;
	INIT_STRING		STR_XMA2EMS,S_STR120_2,M_XMA2EMS      ;AN000; display XMA2EMS parameters
	DISPLAY_PANEL						;AN000; display EXPANDED_MEMORY panel
								;
								;
	cmp N_MOD80,E_IS_MOD80					;AN000; 				      JW
	jne else_l_9						;AN000; 				      JW
	   INIT_VAR		   N_COUNTER,1			;AN000; set counter = 1
								;
	   repeat_l_2:						;AN000; repeat block of code
								;
	      cmp N_COUNTER,1					;AN000;
	      jne otherwise_l_2
		 GET_STRING	   STR_XMAEM,S_STR120_1,M_XMAEM,FK_TAB;AN000; get new parameter for XMAEM
		 COPY_STRING	   S_STR120_1,M_STR120_1,S_USER_STRING;AN000; save parameter in temp location
								;
	      jmp short endselect_l_2
	      otherwise_l_2:					;AN000;
		 GET_STRING	   STR_XMA2EMS,S_STR120_2,M_XMA2EMS,FK_TAB  ;AN000;get new parameter for XMA2EMS
		 COPY_STRING	   S_STR120_2,M_STR120_2,S_USER_STRING	    ;AN000; save parameter in temp location
								;
	      endselect_l_2:					;AN000;
								;
	      INC_VAR		   N_COUNTER			;AN000;
								;
	      cmp N_COUNTER,2					;AN000;
	      jbe @F						;AN000;
		 INIT_VAR	   N_COUNTER,1			;AN000;
	      @@:						;AN000;
								;
	   cmp N_USER_FUNC,E_ENTER				;AN000; break loop if ENTER entered
	   je endif_l_9
	   cmp N_USER_FUNC,E_ESCAPE				;AN000; or ESCAPE entered
	   je endif_l_9
	   cmp N_USER_FUNC,E_F3					;AN000; or F3 entered
	   jne repeat_l_2
	jmp short endif_l_9
	else_l_9:						;AN000; 				      JW
	   GET_STRING	     STR_XMA2EMS,S_STR120_2,M_XMA2EMS,FK_TEXT ;AN000;get new parameter for XMA2EMS    JW
	   COPY_STRING	     S_STR120_2,M_STR120_2,S_USER_STRING      ;AN000; save parameter in temp location JW
	endif_l_9:						;AN000; 				      JW
								;
	cmp N_USER_FUNC,E_ENTER					;AN000; if user entered ENTER key
	jne else_l_10						;AN000;
	   COPY_STRING		S_XMAEM,   M_XMAEM,  S_STR120_1 ;AN000;    save new XMAEM parameter
	   COPY_STRING		S_XMA2EMS, M_XMA2EMS,S_STR120_2 ;AN000;    save new XMA2EMS parameter
	   PUSH_HEADING 	EXP_MEMORY_SCREEN		;AN000;    save screen address on SELECT STACK
	   GOTO_ 		VDISK_SCREEN			;AN000;    goto next screen (VDISK)
	jmp short endif_l_10
	else_l_10:						;AN000;
	   GOTO_ 		PROCESS_ESC_F3			;AN000; user entered ESC or F3, take action
	endif_l_10:						;AN000;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
SELECT	ENDS							;AN000;
	END							;AN000;
